CREATE DATABASE IF NOT EXISTS {DB_NAME}
            LOCATION "{ROOT_DIRECTORY}/dbs/{DB_NAME}";

CREATE TABLE IF NOT EXISTS {DB_NAME}.rims (
            RIMMarket VARCHAR(2),
            RIMVehType SMALLINT,
            RIMID INT,
            RIMWidth VARCHAR(7),
            RIMSuffix VARCHAR(5),
            RIMDiameter VARCHAR(6),
            RIMScrewHCyc VARCHAR(4),
            RIMNumBolt VARCHAR(2),
            RIMPosRimM VARCHAR(3),
            RIMTXTRimMatCd2 VARCHAR(8),
            RIMRecStatus SMALLINT,
            RIMRecDate VARCHAR(8)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.consumer (
            TCOMarket VARCHAR(2),
            TCOVehType SMALLINT,
            TCONatCode VARCHAR(13),
            TCORecStatus SMALLINT,
            TCORecDate VARCHAR(8),
            TCOServIntDisp SMALLINT,
            TCOManMi INT,
            TCOGuarMon SMALLINT,
            TCOGuarDist INT,
            TCORustGMon SMALLINT,
            TCORustGDist INT,
            TCOMobGMon SMALLINT,
            TCOPaintGMon SMALLINT,
            TCORustRG SMALLINT,
            TCOUnitOfDistancCd2 VARCHAR(8),
            TCOTopSpeed SMALLINT,
            TCOTopSpeedV2 SMALLINT,
            TCOGearTopSpd SMALLINT,
            TCOkmStanding DECIMAL(4, 1),
            TCOkmStandingV2 DECIMAL(4, 1),
            TCOAccel DECIMAL(3, 1),
            TCOAccelV2 DECIMAL(3, 1),
            TCOElast DECIMAL(3, 1),
            TCOElastV2 DECIMAL(3, 1),
            TCOTankRange SMALLINT,
            TCOTankRangeV2 SMALLINT,
            TCOConsUrb DECIMAL(3, 1),
            TCOConsUrbV2 DECIMAL(3, 1),
            TCOConsLand DECIMAL(3, 1),
            TCOConsLandV2 DECIMAL(3, 1),
            TCOConsTot DECIMAL(3, 1),
            TCOConsTotV2 DECIMAL(3, 1),
            TCOConsO90 DECIMAL(3, 1),
            TCOConsO120 DECIMAL(3, 1),
            TCOConsOUrb DECIMAL(3, 1),
            TCOConsOMix DECIMAL(3, 1),
            TCOConsO90V2 DECIMAL(3, 1),
            TCOConsO120V2 DECIMAL(3, 1),
            TCOConsOUrbV2 DECIMAL(3, 1),
            TCOConsOMixV2 DECIMAL(3, 1),
            TCODragCW DECIMAL(3, 2),
            TCOArea DECIMAL(3, 2),
            TCOAreaMax DECIMAL(3, 2),
            TCODragInd DECIMAL(4, 2),
            TCOCo2Emi SMALLINT,
            TCOCo2EmiV2 SMALLINT,
            TCODrvNoise SMALLINT,
            TCOCO DECIMAL(6, 3),
            TCOHC DECIMAL(6, 3),
            TCONOx DECIMAL(6, 3),
            TCOPart DECIMAL(7, 4),
            TCOConsPow DECIMAL(4, 1),
            TCOConsPowV2 DECIMAL(4, 1),
            TCOTXTBatTypeCd2 VARCHAR(8),
            TCONumBat SMALLINT,
            TCOBatCap SMALLINT,
            TCONumCharCycl SMALLINT,
            TCOCharTime DECIMAL(3, 1),
            TCOTXTPollNorm1Cd2 VARCHAR(8),
            TCOTXTPollNorm2Cd2 VARCHAR(8),
            TCOTXTPollNorm3Cd2 VARCHAR(8),
            TCOTXTPollNorm4Cd2 VARCHAR(8),
            TCOTXTPollNorm5Cd2 VARCHAR(8),
            TCOVal VARCHAR(8),
            TCONumWheels SMALLINT,
            TCOTypeSpare SMALLINT,
            TCOTyreFront VARCHAR(30),
            TCOTyreRear VARCHAR(30),
            TCOTXTBodyMCatCd2 VARCHAR(8),
            TCOConsGas VARCHAR(8),
            TCOConsGasUrb DECIMAL(3, 1),
            TCOConsGasLand DECIMAL(3, 1),
            TCOConsGasTot DECIMAL(3, 1),
            TCOTXTConsGasUnitCd VARCHAR(8),
            TCOConsUrbImp DECIMAL(4, 1),
            TCOConsLandImp DECIMAL(4, 1),
            TCOConsTotImp DECIMAL(4, 1)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.jwheel (
            JWHMarket VARCHAR(2),
            JWHVehType SMALLINT,
            JWHNatCode VARCHAR(13),
            JWHTYRTyreFCd INT,
            JWHTYRTyreRCd INT,
            JWHTYRTyreMRCd INT,
            JWHTYRTyreMFCd INT,
            JWHRIMRimFCd INT,
            JWHRIMRimRCd INT,
            JWHRIMRimMRCd INT,
            JWHRIMRimMFCd INT,
            JWHIsStd SMALLINT,
            JWHSort INT,
            JWHVal VARCHAR(8),
            JWHRecStatus SMALLINT,
            JWHRecDate VARCHAR(8),
            JWHReplID INT,
            JWHOpFlatTyre SMALLINT
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.tyres (
            TYRMarket VARCHAR(2),
            TYRVehType SMALLINT,
            TYRID INT,
            TYRWidth VARCHAR(7),
            TYRCrossSec VARCHAR(3),
            TYRDesign VARCHAR(2),
            TYRDiameter VARCHAR(6),
            TYRLoadRating VARCHAR(4),
            TYRSpeedIndex VARCHAR(2),
            TYRSuffix VARCHAR(5),
            TYRRecStatus SMALLINT,
            TYRRecDate VARCHAR(8),
            TYRSpeedIndexDin VARCHAR(2)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.make (
            MAKMarket VARCHAR(2),
            MAKVehType SMALLINT,
            MAKLangCode VARCHAR(4),
            MAKNatCode INT,
            MAKRecStatus SMALLINT,
            MAKRecDate VARCHAR(8),
            MAKName VARCHAR(40),
            MAKName2 VARCHAR(40),
            MAKCompany VARCHAR(40),
            MAKImporter VARCHAR(40),
            MAKURLMake VARCHAR(60),
            MAKURLImp VARCHAR(60),
            MAKADRCompCd INT,
            MAKADRImpCd INT,
            MAKSort INT
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.model (
            MODMarket VARCHAR(2),
            MODVehType SMALLINT,
            MODLangCode VARCHAR(4),
            MODNatCode INT,
            MODRecStatus SMALLINT,
            MODRecDate VARCHAR(8),
            MODMakCD INT,
            MODMakIntCD SMALLINT,
            MODName VARCHAR(40),
            MODName2 VARCHAR(40),
            MODNameGrp1 VARCHAR(50),
            MODNameGrp2 VARCHAR(50),
            MODModelSerCode VARCHAR(10),
            MODBegin VARCHAR(4),
            MODEnd VARCHAR(4),
            MODImpBegin VARCHAR(6),
            MODImpEnd VARCHAR(6),
            MODSuccessor INT,
            MODPrev INT,
            MODSort INT
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.type (
            TYPMarket VARCHAR(2),
            TYPVehType SMALLINT,
            TYPNatCode VARCHAR(13),
            TYPRecStatus SMALLINT,
            TYPRecDate VARCHAR(8),
            TYPName VARCHAR(60),
            TYPName2 VARCHAR(60),
            TYPTXTSeg1Cd2 VARCHAR(8),
            TYPTXTSeg2Cd2 VARCHAR(8),
            TYPTXTSegIntCd2 VARCHAR(8),
            TYPTXTSegFisCd2 VARCHAR(8),
            TYPModCd INT,
            TYPMakCd INT,
            TYPModIntCd SMALLINT,
            TYPMakIntCd SMALLINT,
            TYPImpBegin VARCHAR(6),
            TYPImpEnd VARCHAR(6),
            TYPTYPBasTypeCd VARCHAR(13),
            TYPStatus SMALLINT,
            TYPSort INT,
            TYPKW DECIMAL(6, 2),
            TYPHP DECIMAL(6, 2),
            TYPTaxHP DECIMAL(6, 2),
            TYPManCode VARCHAR(12),
            TYPTXTFuelTypeCd2 VARCHAR(8),
            TYPTXTBodyCo1Cd2 VARCHAR(8),
            TYPTXTBodyCo2Cd2 VARCHAR(8),
            TYPTXTBodyCoIntCd2 VARCHAR(8),
            TYPDoor SMALLINT,
            TYPCylinder SMALLINT,
            TYPTXTCylArrCd2 VARCHAR(8),
            TYPCapTech DECIMAL(7, 2),
            TYPTorque DECIMAL(6, 2),
            TYPTXTVARCHARgeCd2 VARCHAR(8),
            TYPValvpCyl SMALLINT,
            TYPTXTExhTreatCd2 VARCHAR(8),
            TYPTXTPollNormCd2 VARCHAR(8),
            TYPTXTTransTypeCd2 VARCHAR(8),
            TYPTXTTrnsTypCd2V2 VARCHAR(8),
            TYPTXTDriveTypeCd2 VARCHAR(8),
            TYPNumGearF SMALLINT,
            TYPNumGearFV2 SMALLINT,
            TYPWheelB1 INT,
            TYPWheelB1Max INT,
            TYPTotWgt INT,
            TYPTotWgtV2 INT,
            TYPSeat SMALLINT,
            TYPSeatMax SMALLINT,
            TYPSeat2 VARCHAR(10),
            TYPSeatMax2 VARCHAR(10),
            TYPDoorMax SMALLINT,
            TYPRoofLoad SMALLINT,
            TYPLength INT,
            TYPLengthMax INT,
            TYPWidth SMALLINT,
            TYPWidthMax SMALLINT,
            TYPHeight SMALLINT,
            TYPHeightMax SMALLINT,
            TYPTrunkCapMax SMALLINT,
            TYPTrunkCapMed SMALLINT,
            TYPTrunkCapMin SMALLINT,
            TYPCurbWgt INT,
            TYPCurbWgtV2 INT,
            TYPTrunkCapWin SMALLINT,
            TYPSteerPos SMALLINT,
            TYPExistPic SMALLINT,
            TYPExistVideo SMALLINT,
            TYPExistRep SMALLINT,
            TYPTargetGrp SMALLINT,
            TYPMloCd SMALLINT,
            TYPMltCd SMALLINT,
            TYPTseCd SMALLINT,
            TYPConsRating VARCHAR(1),
            TYPConsRatingV2 VARCHAR(1),
            TYPConsIndex DECIMAL(6, 4),
            TYPConsIndexV2 DECIMAL(6, 4),
            TYPUVID VARCHAR(25),
            TYPSecFuelTypCd2 VARCHAR(8),
            TYPSecKW DECIMAL(6, 2),
            TYPSecTorque DECIMAL(6, 2),
            TYPRoofMaterialCd2 VARCHAR(8),
            TYPRegTypeCd2 VARCHAR(8)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.txttable (
            TXTMarket VARCHAR(2),
            TXTCode VARCHAR(8),
            TXTLangCode VARCHAR(4),
            TXTTextLong VARCHAR(50),
            TXTTextShort VARCHAR(10),
            TXTRecStatus SMALLINT,
            TXTRecDate VARCHAR(8)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.typ_envkv (
            TENMarket VARCHAR(2),
            TENVehType SMALLINT,
            TENNatCode VARCHAR(13),
            TENVal VARCHAR(8),
            TENValUntil VARCHAR(8),
            TENINFOTYPE SMALLINT,
            TENNumOpt SMALLINT,
            TENWeight INT,
            TENFuelTypeCd2 VARCHAR(8),
            TENConsumptionUnitCd2 VARCHAR(8),
            TENConsPriceBillingUnit DECIMAL(6, 3),
            TENBillingUnitCd2 VARCHAR(8),
            TENPowPriceBillingunit DECIMAL(7, 4),
            TENBillPowUnitCd2 VARCHAR(8),
            TENCons DECIMAL(3, 1),
            TENConsLand DECIMAL(3, 1),
            TENConsTot DECIMAL(3, 1),
            TENCo2Emi INT,
            TENConsPow DECIMAL(5, 1),
            TENConsPowUnitCd2 VARCHAR(8),
            TENCo2EffClassCd2 VARCHAR(8),
            TENMilageCalc INT,
            TENTax DECIMAL(12, 2),
            TENFuelCosts DECIMAL(12, 2),
            TENPowerCosts DECIMAL(12, 2)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.pricehistory (
            PRHMarket VARCHAR(2),
            PRHVehType SMALLINT,
            PRHNatCode VARCHAR(13),
            PRHCurrency VARCHAR(3),
            PRHRecStatus SMALLINT,
            PRHRecDate VARCHAR(8),
            PRHNP1 DECIMAL(13, 2),
            PRHNP2 DECIMAL(13, 2),
            PRHTaxRt DECIMAL(4, 2),
            PRHTax1 DECIMAL(10, 2),
            PRHTax2 DECIMAL(10, 2),
            PRHVal VARCHAR(8),
            PRHNet SMALLINT,
            PRHReplID INT,
            PRHVatAmount DECIMAL(10, 2),
            PRHGrossNP3 DECIMAL(13, 2),
            PRHRecyclCost DECIMAL(10, 2),
            PRHTrptCost DECIMAL(10, 2),
            PRHTrptCostVAT DECIMAL(10, 2),
            PRHImmFee DECIMAL(10, 2),
            PRHValUntil VARCHAR(8),
            PRHProvisional SMALLINT,
            PRHImmFeeNet DECIMAL(10, 2),
            PRHDelPCost DECIMAL(10, 2),
            PRHDelPCostVat DECIMAL(10, 2),
            PRHVehPrCost DECIMAL(10, 2),
            PRHVehPrCostVat DECIMAL(10, 2)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.technic (
            TECMarket VARCHAR(2),
            TECVehType SMALLINT,
            TECNatCode VARCHAR(13),
            TECRecStatus SMALLINT,
            TECRecDate VARCHAR(8),
            TECTXTSegCOCCd2 VARCHAR(8),
            TECVIN VARCHAR(17),
            TECTXTManNamePtCd2 VARCHAR(8),
            TECManPtNote VARCHAR(30),
            TECEngCode VARCHAR(10),
            TECEngCodeV2 VARCHAR(10),
            TECTXTEngTypeCd2 VARCHAR(8),
            TECTXTEngTypSufCd2 VARCHAR(8),
            TECNumStroke SMALLINT,
            TECTaxccm DECIMAL(7, 2),
            TECRevKWmin SMALLINT,
            TECRevKWmax SMALLINT,
            TECRevTRQmin SMALLINT,
            TECRevTRQmax SMALLINT,
            TECTXTCoolMedCd2 VARCHAR(8),
            TECTXTFuelGrdCd2 VARCHAR(8),
            TECTXTFuelGrMinCd2 VARCHAR(8),
            TECTXTFdSysCd2 VARCHAR(8),
            TECTXTIgnCd2 VARCHAR(8),
            TECTXTEngAlignCd2 VARCHAR(8),
            TECCylAngl SMALLINT,
            TECBore DECIMAL(5, 2),
            TECStroke DECIMAL(5, 2),
            TECComp DECIMAL(3, 1),
            TECNumCharg SMALLINT,
            TECTXTDiagSysCd2 VARCHAR(8),
            TECTXTIntCoolCd2 VARCHAR(8),
            TECTXTCamDrvCd2 VARCHAR(8),
            TECTXTCamArrCd2 VARCHAR(8),
            TECTXTValCtrlCd2 VARCHAR(8),
            TECNumBalShaft SMALLINT,
            TECNumPlugCyl SMALLINT,
            TECTXTBrandMotMCd2 VARCHAR(8),
            TECNameMotMan VARCHAR(25),
            TECTXTStarterCd2 VARCHAR(8),
            TECOilCool SMALLINT,
            TECHybNumE SMALLINT,
            TECHybEkw DECIMAL(6, 2),
            TECHybENm DECIMAL(6, 2),
            TECNumAxl SMALLINT,
            TECNumAxlDrv SMALLINT,
            TECNumRevGear SMALLINT,
            TECNumRedGear SMALLINT,
            TECTXTClutchCd2 VARCHAR(8),
            TECTXTClutchConCd2 VARCHAR(8),
            TECTXTBrakeFCd2 VARCHAR(8),
            TECTXTBrakeRCd2 VARCHAR(8),
            TECTXTBrakeMRCd2 VARCHAR(8),
            TECTXTBrakeMFCd2 VARCHAR(8),
            TECBrakeDiamF SMALLINT,
            TECBrakeDiamR SMALLINT,
            TECTXTTShaftCd2 VARCHAR(8),
            TECGRatio VARCHAR(30),
            TECGRatioV2 VARCHAR(30),
            TECGRatioR DECIMAL(4, 2),
            TECGRatioRV2 DECIMAL(4, 2),
            TECAxleRatio DECIMAL(4, 2),
            TECAxleRatioV2 DECIMAL(4, 2),
            TECTXTSuspFCd2 VARCHAR(8),
            TECTXTSuspRCd2 VARCHAR(8),
            TECTXTSuspMRCd2 VARCHAR(8),
            TECTXTSuspMFCd2 VARCHAR(8),
            TECTXTSpringFCd2 VARCHAR(8),
            TECTXTSpringRCd2 VARCHAR(8),
            TECTXTSpringMRCd2 VARCHAR(8),
            TECTXTSpringMFCd2 VARCHAR(8),
            TECBatVolt1 DECIMAL(4, 2),
            TECBatVolt2 DECIMAL(4, 2),
            TECBatAmp1 DECIMAL(5, 2),
            TECBatAmp2 DECIMAL(5, 2),
            TECAltWatt SMALLINT,
            TECAltAmp SMALLINT,
            TECTXTSDoorCd2 VARCHAR(8),
            TECNumSDoor SMALLINT,
            TECNumSDoorMax SMALLINT,
            TECTXTRDoorCd2 VARCHAR(8),
            TECNumRDoor SMALLINT,
            TECNumRDoorMax SMALLINT,
            TECFuelCap DECIMAL(4, 1),
            TECOilCapInc DECIMAL(3, 2),
            TECOilCapExc DECIMAL(3, 2),
            TECCoolCap DECIMAL(3, 2),
            TECGOilCap DECIMAL(3, 2),
            TECGOilCapV2 DECIMAL(3, 2),
            TECROverh SMALLINT,
            TECTXTBodyMatCd2 VARCHAR(8),
            TECWheelB2 INT,
            TECWheelB2max INT,
            TECWheelB3 INT,
            TECWheelB3Max INT,
            TECTrunkL SMALLINT,
            TECTrunkLmax SMALLINT,
            TECTrunkW SMALLINT,
            TECTrunkWmax SMALLINT,
            TECTrunkH SMALLINT,
            TECTrunkHmax SMALLINT,
            TECTrunkHgrd SMALLINT,
            TECGrdClear SMALLINT,
            TECGrdClearMax SMALLINT,
            TECCurbWgtExcl INT,
            TECTrailUnBrk SMALLINT,
            TECTrailUnBrkV2 SMALLINT,
            TECTrailBrk SMALLINT,
            TECTrailBrkV2 SMALLINT,
            TECTotLngt INT,
            TECSeatH SMALLINT,
            TECPayload INT,
            TECAxleLoadF SMALLINT,
            TECAxleLoadR SMALLINT,
            TECAxleLoadMR SMALLINT,
            TECAxleLoadMF SMALLINT,
            TECTrackFmin SMALLINT,
            TECTrackRmin SMALLINT,
            TECTrackMRmin SMALLINT,
            TECTrackMFmin SMALLINT,
            TECTrackFmax SMALLINT,
            TECTrackRmax SMALLINT,
            TECTrackMRmax SMALLINT,
            TECTrackMFmax SMALLINT,
            TECTurnCirc DECIMAL(3, 1),
            TECSuppLoad SMALLINT,
            TECSaddLoad INT,
            TECTandAxle SMALLINT,
            TECFordingCapMin DECIMAL(4, 1),
            TECFordingCapMax DECIMAL(4, 1),
            TECCritAnglHill DECIMAL(4, 1),
            TECCritAnglRdown DECIMAL(4, 1),
            TECDumpAnglDrvMt DECIMAL(4, 1),
            TECDumpAnglDrvV DECIMAL(4, 1),
            TECAngInclF DECIMAL(4, 1),
            TECAngInclR DECIMAL(4, 1),
            TECAngInclAxl DECIMAL(4, 1),
            TECExtWidthInc INT
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.tcert (
            TCEMarket VARCHAR(2),
            TCEVehType SMALLINT,
            TCENatCode VARCHAR(13),
            TCENum VARCHAR(20),
            TCENum2 VARCHAR(12),
            TCEVal VARCHAR(8),
            TCERecStatus SMALLINT,
            TCERecDate VARCHAR(8),
            TCEReplID INT,
            TCEValChange VARCHAR(8),
            TCEEuHomNum VARCHAR(20),
            TCERemark VARCHAR(50)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.typecol (
            TCLMarket VARCHAR(2),
            TCLTypEqtCode INT,
            TCLMCLColCd INT,
            TCLOrdCd VARCHAR(20),
            TCLRecStatus SMALLINT,
            TCLRecDate VARCHAR(8)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.eurocol (
            ECLMarket VARCHAR(2),
            ECLColID VARCHAR(8),
            ECLColName VARCHAR(60),
            ECLLangCode VARCHAR(4),
            ECLRecStatus SMALLINT,
            ECLRecDate VARCHAR(8),
            ECLColCodeCd2 VARCHAR(8)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.manucol (
            MCLMarket VARCHAR(2),
            MCLManColCode INT,
            MCLECLColCd SMALLINT,
            MCLColName VARCHAR(60),
            MCLMakCd INT,
            MCLLangCode VARCHAR(4),
            MCLRecStatus SMALLINT,
            MCLRecDate VARCHAR(8),
            MCLPaintTrimFlag SMALLINT
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.addition (
            ADDMarket VARCHAR(2),
            ADDVehType SMALLINT,
            ADDID INT,
            ADDNatCode VARCHAR(13),
            ADDEQCode INT,
            ADDVal VARCHAR(8),
            ADDValUntil VARCHAR(8),
            ADDCurrency VARCHAR(3),
            ADDPrice1 DECIMAL(10, 2),
            ADDPrice2 DECIMAL(10, 2),
            ADDTaxRt DECIMAL(4, 2),
            ADDTax1 DECIMAL(10, 2),
            ADDTax2 DECIMAL(10, 2),
            ADDNet SMALLINT,
            ADDFlag SMALLINT,
            ADDFlagPack SMALLINT,
            ADDStatus SMALLINT,
            ADDRecStatus SMALLINT,
            ADDRecDate VARCHAR(8),
            ADDTargetGrp SMALLINT,
            ADDAssemble SMALLINT,
            ADDMerchantCode SMALLINT,
            ADDValNewPr DECIMAL(10, 2)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.eqtext (
            EQTMarket VARCHAR(2),
            EQTVehType SMALLINT,
            EQTEQCode INT,
            EQTLangCode VARCHAR(4),
            EQTText VARCHAR(600),
            EQTShort VARCHAR(40),
            EQTDevalCode SMALLINT,
            EQTGroupCode SMALLINT,
            EQTRecStatus SMALLINT,
            EQTRecDate VARCHAR(8),
            EQTSort INT,
            EQTImpCode VARCHAR(1)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.manufactor (
            MANMarket VARCHAR(2),
            MANVehType SMALLINT,
            MANEQTEQCodeCd INT,
            MANVal VARCHAR(8),
            MANValUntil VARCHAR(8),
            MANMakCd INT,
            MANModCd INT,
            MANTypCd VARCHAR(13),
            MANMCode VARCHAR(20),
            MANRecStatus SMALLINT,
            MANRecDate VARCHAR(8)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.esaco (
            ESGType SMALLINT,
            ESGTXTCodeCd2 VARCHAR(8),
            ESGSort SMALLINT,
            ESGTXTMainGrpCd2 VARCHAR(8),
            ESGTXTSubGrpCd2 VARCHAR(8),
            ESGRecStatus SMALLINT,
            ESGRecDate VARCHAR(8)
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

CREATE TABLE IF NOT EXISTS {DB_NAME}.esajoin (
            ESJMarket VARCHAR(2),
            ESJVehType SMALLINT,
            ESJEQTEQCodeCd INT,
            ESJTXTESACOCd2 VARCHAR(8),
            ESJRecStatus SMALLINT,
            ESJRecDate VARCHAR(8),
            ESJReplID INT
)
PARTITIONED BY(data_date_part STRING, data_timestamp_part STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE;

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/RIMS.gkp"
INTO TABLE {DB_NAME}.rims
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/CONSUMER.gkp"
INTO TABLE {DB_NAME}.consumer
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/JWHEEL.gkp"
INTO TABLE {DB_NAME}.jwheel
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/TYRES.gkp"
INTO TABLE {DB_NAME}.tyres
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/MAKE.gkp"
INTO TABLE {DB_NAME}.make
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/MODEL.gkp"
INTO TABLE {DB_NAME}.model
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/TYPE.gkp"
INTO TABLE {DB_NAME}.type
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/TXTTABEL.gkp"
INTO TABLE {DB_NAME}.txttable
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/TYP_ENVKV.gkp"
INTO TABLE {DB_NAME}.typ_envkv
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/PRICEHISTORY.gkp"
INTO TABLE {DB_NAME}.pricehistory
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/TECHNIC.gkp"
INTO TABLE {DB_NAME}.technic
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/TCERT.gkp"
INTO TABLE {DB_NAME}.tcert
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/TYPECOL.gkp"
INTO TABLE {DB_NAME}.typecol
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/EUROCOL.gkp"
INTO TABLE {DB_NAME}.eurocol
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/MANUCOL.gkp"
INTO TABLE {DB_NAME}.manucol
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/ADDITION.gkp"
INTO TABLE {DB_NAME}.addition
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/EQTEXT.gkp"
INTO TABLE {DB_NAME}.eqtext
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/MANUFACTOR.gkp"
INTO TABLE {DB_NAME}.manufactor
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/ESACO.gkp"
INTO TABLE {DB_NAME}.esaco
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );

LOAD DATA INPATH "{ROOT_DIRECTORY}/{SOURCE_FOLDER}/ESAJOIN.gkp"
INTO TABLE {DB_NAME}.esajoin
    PARTITION(
        data_date_part='{CURRENT_DATE_%Y-%m-%d}',
        data_timestamp_part='{CURRENT_TIMESTAMP}'
    );